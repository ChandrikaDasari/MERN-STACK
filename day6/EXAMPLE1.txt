EXAMPLE1:


C:\Users\Admin>mongosh
Current Mongosh Log ID: 666805ce7c7ba7114acdcdf5
Connecting to:          mongodb://127.0.0.1:27017/?directConnection=true&serverSelectionTimeoutMS=2000&appName=mongosh+2.2.6
Using MongoDB:          7.0.11
Using Mongosh:          2.2.6

For mongosh info see: https://docs.mongodb.com/mongodb-shell/

------
   The server generated these startup warnings when booting
   2024-06-11T09:43:15.923+05:30: Access control is not enabled for the database. Read and write access to data and configuration is unrestricted
------

test> use SRM
switched to db SRM
SRM> db.Employees.aggregate([{$match:{EID:"1001"}}])

SRM> db.Employees.find()
[
  {
    _id: ObjectId('6667f2b3f6aace1885cdcdfa'),
    EID: 1001,
    name: 'dsouza',
    age: 35,
    DOJ: ISODate('1970-01-01T00:00:00.000Z')
  },
  {
    _id: ObjectId('6667f313e8e3d7df682273fb'),
    id: 1,
    name: 'ram',
    salary: 30000
  },
  {
    _id: ObjectId('6667f313e8e3d7df682273fc'),
    id: 2,
    name: 'shyam',
    salary: 40000
  },
  {
    _id: ObjectId('6667f313e8e3d7df682273fd'),
    id: 3,
    name: 'sam',
    salary: 50000
  },
  {
    _id: ObjectId('6667f360e8e3d7df68227400'),
    EID: 1002,
    name: 'narine',
    age: 39,
    DOJ: "new Date('2011-02-11')"
  }
]
SRM> db.Employees.aggregate([{$match:{EID:"1001",age:35}}])

SRM> db.Employees.aggregate([{$match:{EID:1001,age:35}}])
[
  {
    _id: ObjectId('6667f2b3f6aace1885cdcdfa'),
    EID: 1001,
    name: 'dsouza',
    age: 35,
    DOJ: ISODate('1970-01-01T00:00:00.000Z')
  }
]
SRM> db.Employees.aggregate([{$match:{gender:"F",age:35}}])

SRM> db.Employees.find()
[
  {
    _id: ObjectId('6667f2b3f6aace1885cdcdfa'),
    EID: 1001,
    name: 'dsouza',
    age: 35,
    DOJ: ISODate('1970-01-01T00:00:00.000Z'),
    gender: 'F'
  },
  {
    _id: ObjectId('6667f313e8e3d7df682273fb'),
    name: 'ram',
    salary: 30000,
    gender: 'M',
    EID: 1002
  },
  {
    _id: ObjectId('6667f313e8e3d7df682273fc'),
    name: 'shyam',
    salary: 40000,
    gender: 'M',
    EID: 1003
  },
  {
    _id: ObjectId('6667f313e8e3d7df682273fd'),
    name: 'sam',
    salary: 50000,
    gender: 'F',
    EID: 1004
  },
  {
    _id: ObjectId('6667f360e8e3d7df68227400'),
    EID: 1005,
    name: 'narine',
    age: 39,
    DOJ: "new Date('2011-02-11')",
    gender: 'M'
  }
]
SRM> db.Employees.aggregate([{$count:age}])
ReferenceError: age is not defined
SRM> db.Employees.aggregate([{$count:"age"}])
[ { age: 5 } ]
SRM> db.students.insertOne({sid:309,name:"sia",gender:"F",age:19,DOB:new Date("2004-03-22"),marks:98})
{
  acknowledged: true,
  insertedId: ObjectId('66680c1d7c7ba7114acdcdf6')
}
SRM> db.students.insertOne({sid:309,name:"ariv",gender:"M",age:18,DOB:new Date("2005-04-12"),marks:88})
{
  acknowledged: true,
  insertedId: ObjectId('66680c4e7c7ba7114acdcdf7')
}
SRM> db.students.updateOne({name:"ariv"},{$set:{sid:310}})
{
  acknowledged: true,
  insertedId: null,
  matchedCount: 1,
  modifiedCount: 1,
  upsertedCount: 0
}
SRM> db.Employees.aggregate([{$group:{"_id":"age"}}])
[ { _id: 'age' } ]
SRM> db.students.aggregate([{$group:{"_id":"age"}}])
[ { _id: 'age' } ]
SRM> db.students.aggregate([{$group:{"_id":"$age"}}])
[ { _id: 16 }, { _id: 19 }, { _id: 17 }, { _id: 18 } ]
SRM> db.students.aggregate([{$group:{"_id":"$age","count":{$sum:1}}}])
[
  { _id: 17, count: 1 },
  { _id: 19, count: 1 },
  { _id: 16, count: 1 },
  { _id: 18, count: 2 }
]
SRM> db.students.aggregate([{$group: {"_id":"$age","count":{$sum:1}}},{$limit:1}])
[ { _id: 16, count: 1 } ]
SRM>






EXAMPLE2: